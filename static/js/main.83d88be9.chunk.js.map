{"version":3,"sources":["components/searchField/SearchField.jsx","components/nominations/Nominations.jsx","App.js","serviceWorker.js","index.js"],"names":["SearchField","placeholder","handleChange","name","className","type","onChange","Nominations","props","componentDidUpdate","prevProps","nextProps","nominations","localStorage","setItem","JSON","stringify","deletingItem","item","deleteItem","removingDisable","removeDisable","this","id","map","style","height","key","title","year","aria-hidden","onClick","Component","items","toast","configure","App","handleStorageDisable","itemId","push","handleDisabled","imdbID","setState","disabled","state","addItem","filter","results","parse","getItem","event","preventDefault","searchField","target","value","handleSubmit","e","notify","movies","prevState","fetch","then","response","json","movie","Search","catch","error","console","log","disableButton","itemsToRender","length","backgroundImage","Poster","Title","Year","indexOf","class","Spinner","animation","variant","onSubmit","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.83d88be9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./search.style.scss\";\r\nfunction SearchField({ placeholder, handleChange, name }) {\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"search-box\"\r\n        type=\"search\"\r\n        name={name}\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchField;\r\n","import React, { Component } from \"react\";\r\nimport \"./nominations.style.scss\";\r\nclass Nominations extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, nextProps) => {\r\n    if (this.props.nominations !== prevProps.nominations) {\r\n      localStorage.setItem(\r\n        \"Nomination\",\r\n        JSON.stringify(this.props.nominations)\r\n      );\r\n    }\r\n    return false;\r\n  };\r\n\r\n  deletingItem = (item) => {\r\n    this.props.deleteItem(item);\r\n  };\r\n  removingDisable = (item) => {\r\n    this.props.removeDisable(item);\r\n  };\r\n\r\n  render() {\r\n    const { nominations } = this.props;\r\n\r\n    return (\r\n      <div id=\"nom\" className=\"nominations\">\r\n        {nominations &&\r\n          nominations.map((item) => {\r\n            return (\r\n              <div\r\n                className=\"card mt-3 text-center \"\r\n                style={{ height: \"5rem\" }}\r\n                key={item.id}\r\n              >\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div className=\"card-title ml-3 mt-3 text-info d\">\r\n                    <h4>\r\n                      {item.title} ({item.year}){\" \"}\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-between \">\r\n                    <span\r\n                      aria-hidden=\"true\"\r\n                      key={item.id}\r\n                      onClick={() => {\r\n                        this.deletingItem(item.id);\r\n                        this.removingDisable(item.id);\r\n                      }}\r\n                      className=\"mr-3 close mt-2\"\r\n                    >\r\n                      &times;\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nominations;\r\n","// import React, { Component } from \"react\";\n// import SearchField from \"./components/searchField/SearchField\";\n// import SearchResult from \"./components/searchResult/SearchResult\";\n// import Nominations from \"./components/nominations/Nominations\";\n// import \"./App.scss\";\n// import { toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// let items = [];\n\n// toast.configure();\n\n// class App extends Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       movies: [],\n//       nominations: [],\n//       searchField: \"\",\n//       disabled: [],\n//     };\n//   }\n\n//   componentDidMount() {\n//     localStorage.getItem(\"disabled\") &&\n//       this.setState({\n//         disabled: JSON.parse(localStorage.getItem(\"disabled\")),\n//       });\n\n//     localStorage.getItem(\"Nomination\") &&\n//       this.setState({\n//         nominations: JSON.parse(localStorage.getItem(\"Nomination\")),\n//       });\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.searchField !== this.state.searchField) {\n//       fetch(\n//         `http://www.omdbapi.com/?s=${this.state.searchField}&apikey=4ce50211#`\n//       )\n//         .then((response) => response.json())\n//         .then((movie) => this.setState({ movies: movie.Search }))\n//         .catch((error) => {\n//           console.log(error);\n//         });\n//     }\n//   }\n\n//   handleStorageDisable = (itemId) => {\n//     items.push(itemId);\n//     localStorage.setItem(\"disabled\", JSON.stringify(items));\n//   };\n\n//   handleDisabled = (imdbID) => {\n//     this.handleStorageDisable(imdbID);\n//     this.setState({\n//       disabled: [...this.state.disabled, imdbID],\n//     });\n//   };\n\n//   addItem = (item) => {\n//     this.setState({\n//       nominations: [...this.state.nominations, item],\n//     });\n//   };\n\n//   deleteItem = (itemId) => {\n//     const nominations = this.state.nominations.filter(\n//       (item) => item.id !== itemId\n//     );\n//     this.setState({\n//       nominations,\n//     });\n//   };\n\n//   removeDisable = (itemId) => {\n//     const disabled = JSON.parse(localStorage.getItem(\"disabled\"));\n\n//     let results = disabled.filter((item) => {\n//       return item !== itemId;\n//     });\n\n//     localStorage.setItem(\"disabled\", JSON.stringify(results));\n//     this.setState({\n//       disabled: results,\n//     });\n//   };\n\n//   handleChange = (event) => {\n//     event.preventDefault();\n//     this.setState({ searchField: event.target.value });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//   };\n\n//   notify = () => {\n//     toast(\"You have made 5 nominations already\");\n//   };\n\n//   render() {\n//     const {\n//       movies,\n//       nominations,\n//       disabled,\n//       handleSubmit,\n//       searchField,\n//     } = this.state;\n//     console.log(searchField.length);\n\n//     let disableButton;\n//     if (nominations.length === 5) {\n//       disableButton = true;\n//       this.notify();\n//     }\n\n//     return (\n//       <div className=\"container-fluid b\">\n//         <div className=\"row search-container d-flex justify-content-center align-items-end\">\n//           <div className=\"col-md-8\">\n//             <form onSubmit={handleSubmit}>\n//               <SearchField\n//                 name=\"search\"\n//                 placeholder=\"search movies\"\n//                 handleChange={this.handleChange}\n//               />\n//             </form>\n//           </div>\n//         </div>\n//         <div className=\"row result\">\n//           <div className=\"col-md-4 order-md-2 nomination-box \">\n//             <Nominations\n//               nominations={nominations}\n//               deleteItem={this.deleteItem}\n//               removeDisable={this.removeDisable}\n//             />\n//           </div>\n//           <div className=\"col-md-7  order-md-1 row-container j\">\n//             {movies &&\n//               movies.map((movie) => {\n//                 return (\n//                   <div key={movie.imdbID} className=\"movie-container\">\n//                     {\" \"}\n//                     <div\n//                       className=\"card mt-3\"\n//                       style={{\n//                         backgroundImage: `url(${movie.Poster})`,\n//                       }}\n//                     ></div>\n//                     <div className=\"mini-card\">\n//                       <div className=\"title\"> {movie.Title}</div>\n//                       <div className=\"year\"> {movie.Year}</div>\n//                     </div>\n//                     <div className=\"button-container\">\n//                       <button\n//                         key={movie.imdbID}\n//                         disabled={\n//                           this.state.disabled.indexOf(movie.imdbID) !== -1 ||\n//                           disableButton\n//                         }\n//                         className=\"btn btn-primary mt-3\"\n//                         onClick={() => {\n//                           this.addItem({\n//                             title: movie.Title,\n//                             id: movie.imdbID,\n//                             year: movie.Year,\n//                           });\n//                           this.handleDisabled(movie.imdbID);\n//                         }}\n//                       >\n//                         Nominate\n//                       </button>\n//                     </div>\n//                   </div>\n//                 );\n//               })}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\nimport React, { Component } from \"react\";\nimport SearchField from \"./components/searchField/SearchField\";\nimport SearchResult from \"./components/searchResult/SearchResult\";\nimport Nominations from \"./components/nominations/Nominations\";\nimport \"./App.scss\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport * as ReactBootStrap from \"react-bootstrap\";\nimport { Spinner } from \"react-bootstrap\";\nlet items = [];\n\ntoast.configure();\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n      nominations: [],\n      searchField: \"\",\n      disabled: [],\n    };\n  }\n\n  componentDidMount() {\n    localStorage.getItem(\"disabled\") &&\n      this.setState({\n        disabled: JSON.parse(localStorage.getItem(\"disabled\")),\n      });\n\n    localStorage.getItem(\"Nomination\") &&\n      this.setState({\n        nominations: JSON.parse(localStorage.getItem(\"Nomination\")),\n      });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchField !== this.state.searchField) {\n      fetch(\n        `http://www.omdbapi.com/?s=${this.state.searchField}&apikey=4ce50211#`\n      )\n        .then((response) => response.json())\n        .then((movie) => this.setState({ movies: movie.Search }))\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }\n\n  handleStorageDisable = (itemId) => {\n    items.push(itemId);\n    localStorage.setItem(\"disabled\", JSON.stringify(items));\n  };\n\n  handleDisabled = (imdbID) => {\n    this.handleStorageDisable(imdbID);\n    this.setState({\n      disabled: [...this.state.disabled, imdbID],\n    });\n  };\n\n  addItem = (item) => {\n    this.setState({\n      nominations: [...this.state.nominations, item],\n    });\n  };\n\n  deleteItem = (itemId) => {\n    const nominations = this.state.nominations.filter(\n      (item) => item.id !== itemId\n    );\n    this.setState({\n      nominations,\n    });\n  };\n\n  removeDisable = (itemId) => {\n    const disabled = JSON.parse(localStorage.getItem(\"disabled\"));\n\n    let results = disabled.filter((item) => {\n      return item !== itemId;\n    });\n\n    localStorage.setItem(\"disabled\", JSON.stringify(results));\n    this.setState({\n      disabled: results,\n    });\n  };\n\n  handleChange = (event) => {\n    event.preventDefault();\n    this.setState({ searchField: event.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  notify = () => {\n    toast(\"You have made 5 nominations already\");\n  };\n\n  render() {\n    const {\n      movies,\n      nominations,\n      disabled,\n      handleSubmit,\n      searchField,\n    } = this.state;\n\n    let disableButton;\n    if (nominations.length === 5) {\n      disableButton = true;\n      this.notify();\n    }\n\n    let itemsToRender;\n\n    if (movies && movies.length > 0) {\n      itemsToRender = movies.map((movie) => {\n        return (\n          <div key={movie.imdbID} className=\"movie-container\">\n            {\" \"}\n            <div\n              className=\"card mt-3\"\n              style={{\n                backgroundImage: `url(${movie.Poster})`,\n              }}\n            ></div>\n            <div className=\"mini-card\">\n              <div className=\"title\"> {movie.Title}</div>\n              <div className=\"year\"> {movie.Year}</div>\n            </div>\n            <div className=\"button-container\">\n              <button\n                key={movie.imdbID}\n                disabled={\n                  this.state.disabled.indexOf(movie.imdbID) !== -1 ||\n                  disableButton\n                }\n                className=\"btn btn-primary mt-3\"\n                onClick={() => {\n                  this.addItem({\n                    title: movie.Title,\n                    id: movie.imdbID,\n                    year: movie.Year,\n                  });\n                  this.handleDisabled(movie.imdbID);\n                }}\n              >\n                Nominate\n              </button>\n            </div>\n          </div>\n        );\n      });\n    } else if (searchField.length === 0) {\n      itemsToRender = (\n        <div className=\"row animation d-flex justify-content-center align-items-center\">\n          <div class=\"card d-flex justify-content-center \">\n            <h3 className=\"text-center\">Search for Movies to Nominate</h3>\n          </div>\n        </div>\n      );\n    } else {\n      itemsToRender = (\n        <div className=\"row animation d-flex justify-content-center align-items-center\">\n          <Spinner animation=\"grow\" variant=\"primary\" />\n          <Spinner animation=\"grow\" variant=\"secondary\" />\n          <Spinner animation=\"grow\" variant=\"success\" />\n          <Spinner animation=\"grow\" variant=\"warning\" />\n          <Spinner animation=\"grow\" variant=\"info\" />\n          <Spinner animation=\"grow\" variant=\"light\" />\n          <Spinner animation=\"grow\" variant=\"dark\" />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"container-fluid b\">\n        <div className=\"row search-container d-flex justify-content-center align-items-end\">\n          <div className=\"col-md-8\">\n            <h1 className=\"text-center\">Shoppie Awards</h1>\n            <form onSubmit={handleSubmit}>\n              <SearchField\n                name=\"search\"\n                placeholder=\"search movies\"\n                handleChange={this.handleChange}\n              />\n            </form>\n          </div>\n        </div>\n        <div className=\"row result\">\n          <div className=\"col-md-4 order-md-2 nomination-box \">\n            <Nominations\n              nominations={nominations}\n              deleteItem={this.deleteItem}\n              removeDisable={this.removeDisable}\n            />\n          </div>\n          <div className=\"col-md-7  order-md-1 row-container j\">\n            {itemsToRender}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}